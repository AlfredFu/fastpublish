<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:task="http://www.springframework.org/schema/task" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd     
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task.xsd">
		
	
		
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- 使得静态资源可以访问 -->
 	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/images/" mapping="/images/**" />
 	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
<!-- 		<property name="webBindingInitializer">
        	<bean class="me.wmn.editor.MyWebBindingInitializer" />
	    </property> -->
	</bean> 
		
 	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
 		<!-- InternalResourceViewResolver默认使用InternalResourceView作为视图（View接口）实现类 -->
 		<!-- JSP中使用了jstl国际化功能需要制定JstlView为视图实现类 -->
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		
		<property name="prefix" value="/WEB-INF/views/" />
		
		<property name="suffix" value=".jsp" />
	</bean> 
	
	<!-- 文件上传 -->
	<!-- 此处ID不能修改， 类似的其他的Resolver的id也是一样的，因为DispatcherServert约定使用这个ID -->
	<!-- DispatcherServlet没有默认加载文件上传解析器 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="${attachment.maxUploadSize}" />
	</bean>
	
	
	<!--  mvc:annotation-driven可以代替AnnotationMethodHandlerAdapter -->
	<!-- <mvc:annotation-driven validator="validator"/> -->
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="jsonHttpMessageConverter" />
				<ref bean="marshallingHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<bean id="marshallingHttpMessageConverter"
        class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="castorMarshaller" />
        <property name="unmarshaller" ref="castorMarshaller" />
    </bean>
    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />
    
<!--     <mvc:annotation-driven conversion-service="conversionService"/>
    <bean class="org.springframework.context.support.ConversionServiceFactoryBean" id="conversionService">
    	<property name="converters">
    		<list>
    			<bean class="me.wmn.convertor.VersionTypeConvertor" />
    		</list>
    	</property>
    </bean> -->
    
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/product/activity/**" />
    		<mvc:mapping path="/product/setting/**" />
    		<!-- <mvc:mapping path="/package/**" /> -->
    		<mvc:mapping path="/version/**" />
    		    		
    		
    		<bean class="me.wmn.interceptor.LoginInterceptor"></bean>
    	</mvc:interceptor>
    	
    	<mvc:interceptor>
    		<mvc:mapping path="/product/new" />
    		<mvc:mapping path="/package/new" />
    		<mvc:mapping path="/version/new" />
    		<mvc:mapping path="/product/delete" />
    		<mvc:mapping path="/package/delete" />
    		<mvc:mapping path="/version/delete" />	
    		<mvc:mapping path="/product/edit" />
    		<mvc:mapping path="/package/edit" />
    		<mvc:mapping path="/version/edit" />
    		
    		<bean class="me.wmn.interceptor.AdminInterceptor"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    
</beans>
